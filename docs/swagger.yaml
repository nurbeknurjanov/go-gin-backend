basePath: /
definitions:
  handlers.ErrorResponse:
    properties:
      code:
        type: integer
      fieldsErrors:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.SexType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - _
    - SEX_MALE
    - SEX_FEMALE
  models.StatusType:
    enum:
    - "1"
    - "0"
    type: string
    x-enum-varnames:
    - STATUS_ENABLED
    - STATUS_DISABLED
  models.Tokens:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  models.User:
    properties:
      age:
        type: integer
      email:
        type: string
      name:
        description: Password string     `json:"-"`
        type: string
      password:
        type: string
      sex:
        $ref: '#/definitions/models.SexType'
      status:
        $ref: '#/definitions/models.StatusType'
    type: object
host: localhost:3001
info:
  contact: {}
  description: API Server for CRUD Application
  title: CRUD App API
  version: "1.0"
paths:
  /auth/get-access-token:
    get:
      consumes:
      - application/json
      description: Get access token
      operationId: getAccessToken
      parameters:
      - description: login params
        in: body
        name: inputBody
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: GetAccessToken
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authorize
      operationId: login
      parameters:
      - description: login params
        in: body
        name: inputBody
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Login
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: List users
      operationId: listUsers
      parameters:
      - description: Page number
        example: 0
        in: query
        name: pageNumber
        type: integer
      - description: Page size
        example: 12
        in: query
        name: pageSize
        type: integer
      - description: Sex(Male=1, Female=2)
        enum:
        - 1
        - 2
        in: query
        name: sex
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - AccessTokenHeaderName: []
      summary: ListUsers
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user
      operationId: createUser
      parameters:
      - description: create user params
        in: body
        name: inputBody
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - AccessTokenHeaderName: []
      summary: CreateUser
      tags:
      - users
  /users/{id}:
    put:
      consumes:
      - application/json
      description: Update user
      operationId: updateUser
      parameters:
      - description: update user params
        in: body
        name: inputBody
        required: true
        schema:
          $ref: '#/definitions/models.User'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - AccessTokenHeaderName: []
      summary: UpdateUser
      tags:
      - users
securityDefinitions:
  AccessTokenHeaderName:
    in: header
    name: X-Access-Token
    type: apiKey
swagger: "2.0"
